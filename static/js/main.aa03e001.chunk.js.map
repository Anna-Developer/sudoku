{"version":3,"sources":["components/GameOver.jsx","components/Main.jsx","components/Menu.jsx","components/Win.jsx","App.js","reportWebVitals.js","index.js"],"names":["GameOver","className","to","Main","tbody","map","tr","trIdx","td","tdIdx","numbers","li","listItdx","Menu","Win","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"iNAiBeA,EAfE,WACf,OACE,sBAAKC,UAAU,mBAAf,UACE,2CACA,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAASC,GAAG,QAAQD,UAAU,MAA9B,kBAGA,cAAC,IAAD,CAASC,GAAG,QAAQD,UAAU,MAA9B,8BC8BOE,EAxCF,WACX,IAYMC,EAZY,CAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAGHC,KAAI,SAACC,EAAIC,GAC/B,OACE,6BACGD,EAAGD,KAAI,SAACG,EAAIC,GACX,OAAO,6BAAKD,YAKdE,EAVc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAUjBL,KAAI,SAACM,EAAIC,GACnC,OAAO,6BAAKD,OAGd,OACE,sBAAKV,UAAU,OAAf,UACE,oBAAIA,UAAU,QAAd,oBACA,uBAAOA,UAAU,WAAjB,SACE,uBAAOA,UAAU,SAAjB,SAA2BG,MAE7B,oBAAIH,UAAU,UAAd,SAAyBS,IACzB,sBAAKT,UAAU,SAAf,qBACU,iCATC,EASD,iBCrBDY,EAXF,WACX,OACE,sBAAKZ,UAAU,UAAf,UACE,wCACA,cAAC,IAAD,CAASC,GAAG,QAAQD,UAAU,MAA9B,sBCWSa,EAfH,WACV,OACE,sBAAKb,UAAU,cAAf,UACE,0CACA,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAASC,GAAG,QAAQD,UAAU,MAA9B,kBAGA,cAAC,IAAD,CAASC,GAAG,QAAQD,UAAU,MAA9B,+BCUOc,MAbf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAAOe,OAAK,EAACC,KAAM,CAAC,IAAK,SAAUC,OAAQ,kBAAM,cAAC,EAAD,OACjD,cAAC,IAAD,CAAOD,KAAK,QAAQC,OAAQ,kBAAM,cAAC,EAAD,OAClC,cAAC,IAAD,CAAOD,KAAK,OAAOC,OAAQ,kBAAM,cAAC,EAAD,OACjC,cAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,cAAC,EAAD,aCF/BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASV,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFW,SAASC,eAAe,SAM1BX,M","file":"static/js/main.aa03e001.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\n\r\nconst GameOver = () => {\r\n  return (\r\n    <div className=\"default gameOver\">\r\n      <h1>You lose!</h1>\r\n      <div className=\"btns\">\r\n        <NavLink to=\"/menu\" className=\"btn\">\r\n          Menu\r\n        </NavLink>\r\n        <NavLink to=\"/main\" className=\"btn\">\r\n          Try again\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default GameOver;\r\n","const Main = () => {\r\n  const tbodyData = [\r\n    [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n    [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n    [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n    [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n    [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n    [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n    [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n    [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n    [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n  ];\r\n  const numbersData = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n  const tbody = tbodyData.map((tr, trIdx) => {\r\n    return (\r\n      <tr>\r\n        {tr.map((td, tdIdx) => {\r\n          return <td>{td}</td>;\r\n        })}\r\n      </tr>\r\n    );\r\n  });\r\n  const numbers = numbersData.map((li, listItdx) => {\r\n    return <li>{li}</li>;\r\n  });\r\n  const errors = 0;\r\n  return (\r\n    <div className=\"main\">\r\n      <h1 className=\"title\">Sudoku</h1>\r\n      <table className=\"gameArea\">\r\n        <tbody className=\"blocks\">{tbody}</tbody>\r\n      </table>\r\n      <ul className=\"numbers\">{numbers}</ul>\r\n      <div className=\"errors\">\r\n        Errors: <span>{errors} / 3</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { NavLink } from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <div className=\"default\">\r\n      <h1>Sudoku</h1>\r\n      <NavLink to=\"/main\" className=\"btn\">\r\n        Play\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import { NavLink } from \"react-router-dom\";\r\n\r\nconst Win = () => {\r\n  return (\r\n    <div className=\"default win\">\r\n      <h1>You win!</h1>\r\n      <div className=\"btns\">\r\n        <NavLink to=\"/menu\" className=\"btn\">\r\n          Menu\r\n        </NavLink>\r\n        <NavLink to=\"/main\" className=\"btn\">\r\n          Play again\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Win;\r\n","import { Route } from 'react-router';\nimport './App.scss';\nimport GameOver from './components/GameOver';\nimport Main from './components/Main';\nimport Menu from './components/Menu';\nimport Win from './components/Win';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Route exact path={['/', '/menu']} render={() => <Menu />} />\n        <Route path=\"/main\" render={() => <Main />} />\n        <Route path=\"/win\" render={() => <Win />} />\n        <Route path=\"/gameOver\" render={() => <GameOver />} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n// yarn add react-router-dom redux react-redux gh-pages node-sass@4.14","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}